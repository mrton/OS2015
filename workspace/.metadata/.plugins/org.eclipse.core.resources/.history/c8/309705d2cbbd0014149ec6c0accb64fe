package P2;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.Queue;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.BlockingQueue;

/**
 * This class implements a queue of customers as a circular buffer.
 */
public class CustomerQueue {
	/**
	 * Creates a new customer queue.
	 * @param queueLength	The maximum length of the queue.
	 * @param gui			A reference to the GUI interface.
	 */
	
	//public BlockingQueue<Customer> queue;
	public int queueLength;
	public Queue<Customer> queue;
	public boolean[] availSeats;
	
	
    public CustomerQueue(int queueLength, Gui gui) {
    	this.queueLength = queueLength;
    	//queue = new ArrayBlockingQueue<Customer>(queueLength);
    	
    	
	}

	// Add more methods as needed

	public void addCustomer() throws InterruptedException {
		
		//Customer newCustomer = new Customer();
		//queue.put(newCustomer);
		//gui.fillLoungeChair(, new Customer());
		
		
	}
	
	public void getCustomer() {
		
	}
}
